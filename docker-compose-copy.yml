#docker-compose.yml
#version: "3.8"
version: "2"

services:
  postgres_db:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5434:${DB_PORT}"
    volumes: [ './postgres/db/:/var/lib/postgresql/data/', './postgres/db/:/logs/' ]
    command: ["postgres", "-c", "log_statement=all"]
    expose:
      - 5434
    networks:
      advertising_services_network:
        ipv4_address: 192.168.55.4

  django:
#    depends_on:
#      - postgres_db
    build: .
    container_name: django
#    command: python manage.py migrate
#    command: [ "python", "manage.py", "migrate" ]
#    command: [ "python", "manage.py", "1_add_group_users" ]
#    command: [ "python", "manage.py", "2_add_permissions" ]
#    command: [ "python", "manage.py", "3_add_group_permissions" ]
#    command: ["python", "manage.py", "4_add_superuser"]
    command: ["python", "manage.py", "runserver", "0.0.0.0:8080"]
#    command: python manage.py runserver 0.0.0.0:8080
    ports:
      - "8080:8080"
    networks:
      advertising_services_network:
        ipv4_address: 192.168.55.3

networks:
  advertising_services_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.55.0/24
          gateway: 192.168.55.1
