#docker-compose.yml
version: "2"

services:
  postgres_db:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
#    restart: always
    ports:
      - "5434:${DB_PORT}"
    volumes: [ './postgres/db/:/var/lib/postgresql/data/', './postgres/db/:/logs/' ]
#    command: ["postgres", "-c", "log_destination=stderr", "-c", "logging_collector=on", "-c", "log_directory=/logs", "-c", "log_filename=postgresql.log", "-c", "log_statement=all"]
    command: ["postgres", "-c", "log_statement=all"]
    expose:
      - 5434
    networks:
      advertising_services_network:
        ipv4_address: 192.168.55.4

#  django:
#      build: django_crm/.
#      container_name: django_crm
#      stop_signal: SIGKILL
#      command:
#        - gunicorn
#        - mysite.wsgi:application
#        - --bind
#        - "0.0.0.0:8000"
#      volumes:
#        - postgres:postgres
#        - ./mysite/database:/app/database
#    depends_on:
#      - postgres_db
#      restart: always
#      env_file:
#        - .env
#      ports:
#        - "8000:8000"
#      logging:
#        driver: "json-file"
#        options:
#          max-file: "10"
#          max-size: "200k"
#      networks:
#        app_network:
#          ipv4_address: 192.168.55.3



#  app:
#    build: .
#    container_name: fastapi
#    stop_signal: SIGKILL
#    restart: always
#    ports:
#      - "8000:8000"
#    volumes:
#     - ./app/medias:/app/medias
#    depends_on:
#      - postgres_db
#    networks:
#      app_network:
#        ipv4_address: 192.168.55.3
#
#  nginx:
#    container_name: "nginx"
#    image: nginx:alpine
#    depends_on:
#      - app
#    volumes:
#      - ./nginx/static/:/static
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#    ports:
#      - 80:80
#    networks:
#      app_network:
#        ipv4_address: 192.168.55.2

#  prometheus:
#      image: prom/prometheus:latest
#      volumes:
#        - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
#      container_name: prometheus
#      depends_on:
#        - app
#      command:
#        - --config.file=/etc/prometheus/prometheus.yml
#      ports:
#        - 9090:9090
#      restart: unless-stopped
#      environment:
#        TZ: "Europe/Moscow"
#      networks:
#        app_network:
#          ipv4_address: 192.168.55.5
#
#  grafana:
#      image: grafana/grafana:5.1.0
#      user: root
#      depends_on:
#        - prometheus
#      ports:
#        - 3000:3000
#      volumes:
#        - ./grafana:/var/lib/grafana
#        - ./grafana/provisioning/:/etc/grafana/provisioning/
#      container_name: grafana
#      restart: unless-stopped
#      environment:
#        TZ: "Europe/Moscow"
#      networks:
#        app_network:
#          ipv4_address: 192.168.55.6

networks:
  advertising_services_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.55.0/24
          gateway: 192.168.55.1
